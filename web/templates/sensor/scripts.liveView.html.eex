<script type="text/javascript">
  var data = [];

  g = new Dygraph(

    document.getElementById("graphdiv"),

    data,
    {
      labels: ["x", "<%= @sensor[:unit_of_measure] %>"],
    }
  );
</script>


<script> 
  $(document).ready(function(){
    var opts = {
      lines: 13 // The number of lines to draw
    , length: 28 // The length of each line
    , width: 14 // The line thickness
    , radius: 42 // The radius of the inner circle
    , scale: 0.6 // Scales overall size of the spinner
    , corners: 1 // Corner roundness (0..1)
    , color: '#000' // #rgb or #rrggbb or array of colors
    , opacity: 0.25 // Opacity of the lines
    , rotate: 90 // The rotation offset
    , direction: 1 // 1: clockwise, -1: counterclockwise
    , speed: 2.2 // Rounds per second
    , trail: 100 // Afterglow percentage
    , fps: 20 // Frames per second when using setTimeout() as a fallback for CSS
    , zIndex: 2e9 // The z-index (defaults to 2000000000)
    , className: 'spinner' // The CSS class to assign to the spinner
    , top: '42%' // Top position relative to parent
    , left: '50%' // Left position relative to parent
    , shadow: false // Whether to render a shadow
    , hwaccel: false // Whether to use hardware acceleration
    , position: 'absolute' // Element positioning
    };
    var spinner = new Spinner(opts);
    var target = document.getElementById("graphdiv");

    var socket = require('web/static/js/socket');
    socket.connect();
    var channel = null;
    $("#live_start").click(function(){
      spinner.spin(target);
      data = [];
      g.updateOptions( {'file': data} );
      var topic = 'sensors:<%= @sensor[:id] %>';
      console.log("Topic: " + topic);
      channel = socket.channel(topic, {});
      channel.on("new_log", function(msg){
        spinner.stop(target);
        console.log(msg);
        data.push([msg.timestamp, msg.value]);
        if (data.length > 1000) {
          data.shift();
        }
        g.updateOptions( {'file': data} );
      });
      channel.join()
        .receive('ok', function (resp) { console.log('Joined successfully', resp); spinner.stop(target); })
        .receive('error', function (resp) { console.log('Unable to join', resp); spinner.stop(target);});
    });
    $("#live_stop").click(function(){
      spinner.stop(target);
      channel.leave();
    });
  });
</script>